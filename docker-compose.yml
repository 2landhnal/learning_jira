volumes:
  n8n_data:
services:
  postgres:
    container_name: postgres
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
      - POSTGRES_JIRA_DB
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    container_name: n8n 
    image: n8nio/n8n:1.102.1
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - GENERIC_TIMEZONE=Asia/Saigon
      - TZ=Asia/Saigon
      - N8N_ENCRYPTION_KEY
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
    ports:
      - 5678:5678
    links:
      - postgres
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy

  nginx: 
    container_name: nginx 
    image: nginx:latest 
    volumes:
     - ./nginx.conf:/etc/nginx/nginx.conf 
    depends_on: 
     - jira 
    ports: 
     - "80:80" 
    networks: 
      default: 
        aliases:
         - jira.internal

  jira:
    container_name: jira 
    image: atlassian/jira-software:10.4.1 
    environment:
     - ATL_PROXY_NAME=jira.internal
     - ATL_PROXY_PORT=80
     - ATL_TOMCAT_SCHEME=http 
    volumes:
     - ./jira_data:/var/atlassian/application-data/jira

  jira-mcp:
    container_name: jira-mcp 
    image: ghcr.io/sooperset/mcp-atlassian:latest
    environment:
    - JIRA_URL=http://jira.internal
    - TRANSPORT=streamable-http
    env_file:
      - .env
    command: ["--transport", "streamable-http", "--port", "9000", "-vv"]
    depends_on:
      - jira

  redis:
    container_name: redis
    image: redis:8.2-rc1-alpine
    restart: always
    volumes:
      - ./redis_data:/data
    ports:
      - "6380:6379"

  curl:
    container_name: curl
    image: alpine/curl:8.14.1
    command: ["tail", "-f", "/dev/null"]  # Keeps container running indefinitely
    # Alternative: command: ["sleep", "infinity"]